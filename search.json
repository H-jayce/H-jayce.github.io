[{"title":"Pytorch_GPU","date":"2021-08-16T16:00:00.000Z","url":"/2021/08/17/Pytorch_GPU/","tags":[["机器学习","/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"]],"categories":[["机器学习","/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"]],"content":"PyTorch是一个开源的Python机器学习库，基于Torch，用于自然语言处理等应用程序。 2017年1月，由Facebook人工智能研究院（FAIR）基于Torch推出了PyTorch。它是一个基于Python的可续计算包，提供两个高级功能： 1、具有强大的GPU加速的张量计算（如NumPy）。 2、包含自动求导系统的深度神经网络。 1. 安装conda1.1 Anaconda安装包1.2 安装annacondabash Anaconda*.sh 1.3 检查conda版本conda --version 2. 安装NVIDIA2.1 sudo apt install nvidia-driver-4402.2 输入secure boot 密码2.3 关机重启，进入界面2.4 选择enroll mok $\\rightarrow$ continue $\\rightarrow$ yes $\\rightarrow$输入设置的secure boot密码 $\\rightarrow$​ reboot2.5 进入桌面nvidia-smi 3.安装CUDA3.1 sudo apt install nvidia-cuda-toolkit3.2 查看版本nvcc -V 4. 安装PyTorch_GPUPyTorch官网 4.1 conda添加清华源conda config --add channels  conda config --add channels  conda config --add channels  conda config --set show_channel_urls yes 4.2 CPUconda install pytorch torchvision torchaudio cpuonly -c pytorch 4.3 GPUconda install pytorch torchvision torchaudio cudatoolkit=10.1 5. 检查5.1 PyTor_CPUpython import torch print(torch.rand(5, 3)) 1 2 3 4 5tensor([[0.7963, 0.8564, 0.6089], [0.0640, 0.8827, 0.4916], [0.9320, 0.1722, 0.3863], [0.3529, 0.3285, 0.3255], [0.1337, 0.7180, 0.5241]]) 复制 5.2 PyTor_GPUpython import torch torch.cuda.is_available() 1 True "},{"title":"cpp","date":"2021-08-16T16:00:00.000Z","url":"/2021/08/17/cpp/","tags":[["学习","/tags/%E5%AD%A6%E4%B9%A0/"]],"categories":[["学习","/categories/%E5%AD%A6%E4%B9%A0/"]],"content":"1.Python格式化字符 More info: 格式化输出 2.markdown中公式编辑教程 编程——计算——建模——抽象——设定范围。 编程步骤：输入——处理——输出。 3.1 基础如何编译，调试，环境设置; C++语言，语法，语义基础。 3.2 核心面向对象思想;封装，继承，多态;模板，STL;IO，Lambda。 4.1 教材：C++编辑思想、C++程序设计语言、软件调试的艺术。4.2 VirtualBox导入镜像文件 创建文本：touch test.cpp 编译链接：g++ test.cpp 显示当前目录全部内容：ls -lart,直接使用 ll C++标识符C++是区分大小写的编程语言 C/C++基本编译和执行过程预处理——头文件（.hpp）和宏文件展开——生成(.i)文件编译——词法分析，优化，代码生成——（.asm）文件，汇编代码——生成(.o/.obj)文件链接——将（.o）文件和动态库文件（.so）链接——生成可执行文件执行可执行文件预处理——cpp test.cpp&gt;test.i 编译——g++ -g -S test.i 汇编—— as -o test.o test.s gcc -g -c test.c; objdump -d -M intel -S test.o 链接——Id -o myTest test.o …[其他链接选项] C/C++核心调试技术：GDB 1 直接调试：gdb a.out break main run ​ 4.2 通过界面调试 gdb test --tui next 对象，类型，变量和值对象 类型 变量 值 1.基本内置类型：char,unsigned char,signed char int, shortint, longint, float,double,long double 2.自定义类型： C++指针类型指针类型的变量，其值为另一个变量的地址 int *ip; //一个整形的指针 float *fp; //一个浮点型的指针 int *mp; //一个整形指针的指针 int i = 42;int是整数类型，i是变量，42是值 int* p = &i;int*是指针类型（指向整数）， p是变量，&amp;i返回一个地址用作值"},{"title":"Hello World","date":"2021-08-16T13:08:47.593Z","url":"/2021/08/16/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]